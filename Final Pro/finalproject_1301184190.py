# -*- coding: utf-8 -*-
"""FinalProject_1301184190.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CoiUDDDtS3yjgEl602Z2cw3YQ6CEZJm0

### Final Project Data Visualization

Nama : Bagas Teguh Imani

NIM  : 1301184190
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

import pandas as pd
from bokeh.palettes import Spectral11, colorblind, Inferno, BuGn, brewer
from bokeh.models import HoverTool, value, LabelSet, Legend, ColumnDataSource,LinearColorMapper,BasicTicker 
from bokeh.models import PrintfTickFormatter, ColorBar, CDSView, GroupFilter, NumeralTickFormatter, DatetimeTickFormatter
from bokeh.plotting import figure, show
from bokeh.io import output_file
from bokeh.models import ColumnDataSource
from bokeh.layouts import row
from bokeh.models.widgets import Tabs, Panel
from bokeh.io import output_notebook
from bokeh.resources import INLINE
import warnings

#Untuk Menampilkan Hasil Bokeh secara langsung pada Notepad Collab
output_notebook()

#Import Data, Tambahin parse_date utk Date agar type data langsung diubah ke DateTime
data = pd.read_csv('stock_market.csv', parse_dates=['Date'])

data.head()

#Ubah Penamaan Adj CLose Biar lebih Mudah untuk kedepannya
data = data.rename(columns={'Adj Close':'Adj_Close'})

#Cek data apakah ada NULL
data.isnull().sum()

#UNtuk Menyimpan Hasil AKhir Output
output_file('stockmarket.html', title='Stock Market')

"""# ADJ_CLOSE (LEVEL 1)

ADJ CLOSE
"""

# Mengambil Dataset dan dimasukan ke ColumnDataSource untuk ADJ CLOSE
CDS_adjClose = ColumnDataSource(data)

# Membuat Figur untuk Nama Pasar Saham
nasdaq = CDSView(source=CDS_adjClose,
                       filters=[GroupFilter(column_name='Name', group='NASDAQ')])
hangseng = CDSView(source=CDS_adjClose,
                        filters=[GroupFilter(column_name='Name', group='HANG SENG')])
nikkei = CDSView(source=CDS_adjClose,
                        filters=[GroupFilter(column_name='Name', group='NIKKEI')])

# Konfigurasi Figur adjClose
fig_adjClose = figure(x_axis_type='datetime',
                  plot_height=400, plot_width=700,
                  title='Adjusted Closing Price',
                  x_axis_label='Date', y_axis_label='Adj_Close',
                   )

# Membuat Format untuk tanggal dan adj_close
fig_adjClose.yaxis[0].formatter = NumeralTickFormatter(format='0')
fig_adjClose.xaxis[0].formatter = DatetimeTickFormatter(microseconds=['%Y-%m-%d'])

# Membuat tooltips untuk memunculkan Nama, dan parameter Adj Close
tooltips = [
            ('Name','@Name'),
            ('Adjusted Closing Price', '@Adj_Close{0}'),
           ]

# Membuat Hover untuk menampilkan Tooltips
hover_glyph = fig_adjClose.circle(x='Date', y='Adj_Close', source=CDS_adjClose,
                         size=15, alpha=0,
                         hover_fill_color='black', hover_alpha=0.5)

# Menambahkan data perSaham ke Figur adjClose
fig_adjClose.step('Date', 'Adj_Close',
              source=CDS_adjClose, view=nasdaq,
              color='Red', legend_label='NASDAQ')
fig_adjClose.step('Date', 'Adj_Close',
              source=CDS_adjClose, view=hangseng,
              color='Gold', legend_label='HANG SENG')
fig_adjClose.step('Date', 'Adj_Close',
              source=CDS_adjClose, view=nikkei,
              color='Green', legend_label='NIKKEI')

# Menambahkan Tools (HoverTool) ke Figur
fig_adjClose.add_tools(HoverTool(tooltips=tooltips, renderers=[hover_glyph]))

# Visualisasi
show(fig_adjClose)

"""# LEVEL 2

VOLUME
"""

# Mengambil Dataset dan dimasukan ke ColumnDataSource untuk VOLUME
CDS_Volume = ColumnDataSource(data)

# Membuat Figur untuk Nama Pasar Saham
nasdaq = CDSView(source=CDS_Volume,
                       filters=[GroupFilter(column_name='Name', group='NASDAQ')])
hangseng = CDSView(source=CDS_Volume,
                        filters=[GroupFilter(column_name='Name', group='HANG SENG')])
nikkei = CDSView(source=CDS_Volume,
                        filters=[GroupFilter(column_name='Name', group='NIKKEI')])

# Konfigurasi Figur Volume
fig_Volume = figure(x_axis_type='datetime',
                  plot_height=400, plot_width=700,
                  title='Volume',
                  x_axis_label='Date', y_axis_label='Volume',
                   )

# Membuat Format untuk tanggal dan Volume

fig_Volume.xaxis[0].formatter = DatetimeTickFormatter(microseconds=['%Y-%m-%d'])

# Membuat tooltips untuk memunculkan Nama, dan parameter Volume
tooltips = [
            ('Name','@Name'),
            ('Volume', '@Volume')
           ]

# Membuat Hover untuk menampilkan Tooltips
hover_glyph = fig_Volume.circle(x='Date', y='Volume', source=CDS_Volume,
                         size=15, alpha=0,
                         hover_fill_color='black', hover_alpha=0.5)

# Menambahkan data perSaham ke Figur Volume
fig_Volume.step('Date', 'Volume',
              source=CDS_Volume, view=nasdaq,
              color='Red', legend_label='NASDAQ')
fig_Volume.step('Date', 'Volume',
              source=CDS_Volume, view=hangseng,
              color='Gold', legend_label='HANG SENG')
fig_Volume.step('Date', 'Volume',
              source=CDS_Volume, view=nikkei,
              color='Green', legend_label='NIKKEI')

# Menambahkan Tools (HoverTool) ke Figur
fig_Volume.add_tools(HoverTool(tooltips=tooltips, renderers=[hover_glyph]))

#Visualisasi
show(fig_Volume)

"""Day_Perc_Change"""

# Mengambil Dataset dan dimasukan ke ColumnDataSource untuk Day_Perc_Change
CDS_dayPChange = ColumnDataSource(data)

# Membuat Figur untuk Nama Pasar Saham
nasdaq = CDSView(source=CDS_dayPChange,
                       filters=[GroupFilter(column_name='Name', group='NASDAQ')])
hangseng = CDSView(source=CDS_dayPChange,
                        filters=[GroupFilter(column_name='Name', group='HANG SENG')])
nikkei = CDSView(source=CDS_dayPChange,
                        filters=[GroupFilter(column_name='Name', group='NIKKEI')])

# Konfigurasi Figur Day_Perc_Change
fig_dayPChange = figure(x_axis_type='datetime',
                  plot_height=400, plot_width=700,
                  title='Day_Perc_Change',
                  x_axis_label='Date', y_axis_label='Day_Perc_Change',
                   )

# Membuat Format untuk tanggal dan Day_Perc_Change

fig_dayPChange.xaxis[0].formatter = DatetimeTickFormatter(microseconds=['%Y-%m-%d'])

# Membuat tooltips untuk memunculkan Nama, dan parameter Day_Perc_Change
tooltips = [
            ('Name','@Name'),
            ('Day Percent Change', '@Day_Perc_Change{00.0%}')
           ]

# Membuat Hover untuk menampilkan Tooltips
hover_glyph = fig_dayPChange.circle(x='Date', y='Day_Perc_Change', source=CDS_dayPChange,
                         size=15, alpha=0,
                         hover_fill_color='black', hover_alpha=0.5)

# Menambahkan data perSaham ke Figur Day_Perc_Change
fig_dayPChange.step('Date', 'Day_Perc_Change',
              source=CDS_dayPChange, view=nasdaq,
              color='Red', legend_label='NASDAQ')
fig_dayPChange.step('Date', 'Day_Perc_Change',
              source=CDS_dayPChange, view=hangseng,
              color='Gold', legend_label='HANG SENG')
fig_dayPChange.step('Date', 'Day_Perc_Change',
              source=CDS_dayPChange, view=nikkei,
              color='Green', legend_label='NIKKEI')

# Menambahkan Tools (HoverTool) ke Figur
fig_dayPChange.add_tools(HoverTool(tooltips=tooltips, renderers=[hover_glyph]))

#Visualisasi
show(fig_dayPChange)

"""ASPEK INTERAKTIF PEMILIHAN PARAMETER"""

# Membuat Panel agar bisa memilih Parameter yang ingin ditammpilkan
panel_adjClose = Panel(child=fig_adjClose, title='Adj Close')
panel_Volume = Panel(child=fig_Volume, title='Volume')
panel_dayPChange = Panel(child=fig_dayPChange, title='Day Perc Change')

#Memasukkan Tabs Pemilihan Parameter Ke dalam Figure dengan menggabungkan ke3 panel diatas
fig = Tabs(tabs=[panel_adjClose, panel_Volume, panel_dayPChange])

show(fig)

"""# LEVEL 3

Aspek Interaktif Menyembunyikan data indeks saham tertentu
"""

#Penyebunyian menggunakan click_policy pada legend
fig_adjClose.legend.click_policy="hide"
fig_Volume.legend.click_policy="hide"
fig_dayPChange.legend.click_policy="hide"

fig = Tabs(tabs=[panel_adjClose, panel_Volume, panel_dayPChange])

show(fig)